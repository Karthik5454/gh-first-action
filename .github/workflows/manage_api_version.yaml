name: Add API Version to Azure API Management

on:
  workflow_dispatch:  # Manual trigger
    inputs:
      version:
        description: 'Version number'
        required: true
      resource-group:
        description: 'Resource group name'
        required: true
      service-name:
        description: 'API Management service name'
        required: true

jobs:
  add-version:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install yq
      run: |
        sudo wget https://github.com/mikefarah/yq/releases/download/v4.16.1/yq_linux_amd64 -O /usr/bin/yq
        sudo chmod +x /usr/bin/yq

    - name: Set environment variables for create action
      run: |
        echo "version=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        echo "resource_group=${{ github.event.inputs.resource-group }}" >> $GITHUB_ENV
        echo "service_name=${{ github.event.inputs.service-name }}" >> $GITHUB_ENV

    - name: Log in to Azure
      run: az login --service-principal -u b68737df-ecf7-47f8-ab56-070ddbf5514c -p e268Q~iD64TpKVLbce.8dydWnALC0nMRkX-vCbzJ --tenant 84f1e4ea-8554-43e1-8709-f0b8589ea118

    - name: Set up Azure CLI
      uses: azure/CLI@v2
      with:
        azcliversion: latest

    - name: Check if API version set exists
      id: check-version-set
      run: |
        result=$(az apim api versionset list --resource-group ${{ env.resource_group }} --service-name ${{ env.service_name }} --query "[?displayName=='Version ${{ env.version }}'].{Name:name}" --output tsv)
        if [ -z "$result" ]; then
          echo "Version set does not exist, will create."
          echo "create_new_version_set=true" >> $GITHUB_ENV
        else
          echo "Version set already exists, skipping creation."
          echo "create_new_version_set=false" >> $GITHUB_ENV
        fi

    - name: Add API Version to Azure API Management
      if: env.create_new_version_set == 'true'
      run: |
        az apim api versionset create \
          --resource-group ${{ env.resource_group }} \
          --service-name ${{ env.service_name }} \
          --display-name "Version ${{ env.version }}" \
          --versioning-scheme path
